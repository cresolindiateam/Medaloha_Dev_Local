{"ast":null,"code":"import React__default, { Component } from 'react';\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  _setPrototypeOf(subClass, superClass);\n}\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\nvar styles = {\n  \"recorder_library_box\": \"_1ceqH\",\n  \"recorder_box\": \"_2fG9h\",\n  \"recorder_box_inner\": \"_dt3-T\",\n  \"mic_icon\": \"_1dpop\",\n  \"microphone_icon_sec\": \"_3neb0\",\n  \"mic_icon_svg\": \"_3wi1g\",\n  \"reco_header\": \"_1lB9c\",\n  \"h2\": \"_2N9dq\",\n  \"close_icons\": \"_3-aC9\",\n  \"record_section\": \"_3bC73\",\n  \"duration_section\": \"_1YOWG\",\n  \"btn_wrapper\": \"_1Yplu\",\n  \"btn\": \"_1Pz2d\",\n  \"clear_btn\": \"_2gd2_\",\n  \"upload_btn\": \"_37kfa\",\n  \"duration\": \"_f2DT8\",\n  \"recorder_page_box\": \"_17RTH\",\n  \"help\": \"_eV_dK\",\n  \"record_controller\": \"_qxztz\",\n  \"icons\": \"_2uz65\",\n  \"stop\": \"_1bSom\",\n  \"pause\": \"_3nQu5\",\n  \"play_icons\": \"_3O0Io\",\n  \"pause_icons\": \"_2ACrw\",\n  \"stop_icon\": \"_oEOY-\"\n};\nvar audioType = 'audio/*';\nvar Recorder = /*#__PURE__*/function (_Component) {\n  _inheritsLoose(Recorder, _Component);\n  function Recorder(props) {\n    var _this;\n    _this = _Component.call(this, props) || this;\n    _this.state = {\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null,\n      stream: null\n    };\n    _this.timer = 0;\n    _this.startTimer = _this.startTimer.bind(_assertThisInitialized(_this));\n    _this.countDown = _this.countDown.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n  var _proto = Recorder.prototype;\n  _proto.handleAudioPause = function handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({\n      pauseRecord: true\n    });\n  };\n  _proto.handleAudioStart = function handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({\n      pauseRecord: false\n    });\n  };\n  _proto.startTimer = function startTimer() {\n    this.timer = setInterval(this.countDown, 100);\n  };\n  _proto.countDown = function countDown() {\n    var _this2 = this;\n    this.setState(function (prevState) {\n      var miliseconds = prevState.miliseconds + 100;\n      return {\n        time: _this2.milisecondsToTime(miliseconds),\n        miliseconds: miliseconds\n      };\n    });\n    if (this.props.handleCountDown) {\n      this.props.handleCountDown(this.state.time);\n    }\n  };\n  _proto.milisecondsToTime = function milisecondsToTime(milisecs) {\n    var secs = milisecs / 1000;\n    var hours = Math.floor(secs / (60 * 60));\n    var divisor_for_minutes = secs % (60 * 60);\n    var minutes = Math.floor(divisor_for_minutes / 60);\n    var divisor_for_seconds = divisor_for_minutes % 60;\n    var seconds = Math.ceil(divisor_for_seconds);\n    var obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n      ms: milisecs\n    };\n    return obj;\n  };\n  _proto.initRecorder = function initRecorder() {\n    try {\n      var _this4 = this;\n      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia || navigator.mozGetUserMedia || navigator.msGetUserMedia;\n      var _temp2 = function () {\n        if (navigator.mediaDevices) {\n          return Promise.resolve(navigator.mediaDevices.getUserMedia({\n            audio: true\n          })).then(function (stream) {\n            if (_this4.props.mimeTypeToUseWhenRecording) {\n              _this4.mediaRecorder = new MediaRecorder(stream, {\n                mimeType: _this4.props.mimeTypeToUseWhenRecording\n              });\n            } else {\n              _this4.mediaRecorder = new MediaRecorder(stream);\n            }\n            _this4.chunks = [];\n            _this4.mediaRecorder.ondataavailable = function (e) {\n              if (e.data && e.data.size > 0) {\n                _this4.chunks.push(e.data);\n              }\n            };\n            _this4.stream = stream;\n          });\n        } else {\n          _this4.setState({\n            medianotFound: true\n          });\n          console.log('Media Decives will work only with SSL.....');\n        }\n      }();\n      return Promise.resolve(_temp2 && _temp2.then ? _temp2.then(function () {}) : void 0);\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.startRecording = function startRecording(e) {\n    try {\n      var _this6 = this;\n      e.preventDefault();\n      _this6.chunks = [];\n      return Promise.resolve(_this6.initRecorder()).then(function () {\n        _this6.mediaRecorder.start(10);\n        _this6.startTimer();\n        _this6.setState({\n          recording: true\n        });\n      });\n    } catch (e) {\n      return Promise.reject(e);\n    }\n  };\n  _proto.stopRecording = function stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({\n      time: {}\n    });\n    e.preventDefault();\n    if (this.stream.getAudioTracks) {\n      var tracks = this.stream.getAudioTracks();\n      tracks.forEach(function (track) {\n        track.stop();\n      });\n    } else {\n      console.log('No Tracks Found');\n    }\n    this.mediaRecorder.stop();\n    this.setState({\n      recording: false,\n      pauseRecord: false\n    });\n    this.saveAudio();\n  };\n  _proto.handleReset = function handleReset(e) {\n    var _this7 = this;\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n    this.setState({\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, function () {\n      _this7.props.handleReset(_this7.state);\n    });\n  };\n  _proto.saveAudio = function saveAudio() {\n    var blob = new Blob(this.chunks, {\n      type: audioType\n    });\n    var audioURL = window.URL.createObjectURL(blob);\n    var audios = [audioURL];\n    this.setState({\n      audios: audios,\n      audioBlob: blob\n    });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  };\n  _proto.render = function render() {\n    var _this8 = this;\n    var _this$state = this.state,\n      recording = _this$state.recording,\n      audios = _this$state.audios,\n      time = _this$state.time,\n      medianotFound = _this$state.medianotFound,\n      pauseRecord = _this$state.pauseRecord;\n    var _this$props = this.props,\n      showUIAudio = _this$props.showUIAudio,\n      title = _this$props.title,\n      audioURL = _this$props.audioURL,\n      disableFullUI = _this$props.disableFullUI;\n    if (disableFullUI) {\n      return null;\n    }\n    return /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_library_box\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_box\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.recorder_box_inner\n    }, !this.props.hideHeader ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.reco_header\n    }, /*#__PURE__*/React__default.createElement(\"h2\", {\n      className: styles.h2\n    }, title), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.close_icons\n    })) : null, !medianotFound ? /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.record_section\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.btn_wrapper\n    }, /*#__PURE__*/React__default.createElement(\"button\", {\n      onClick: function onClick() {\n        return _this8.props.handleAudioUpload(_this8.state.audioBlob);\n      },\n      className: styles.btn + \" \" + styles.upload_btn,\n      disabled: this.props.uploadButtonDisabled\n    }, \"Upload\"), /*#__PURE__*/React__default.createElement(\"button\", {\n      onClick: function onClick(e) {\n        return _this8.handleReset(e);\n      },\n      className: styles.btn + \" \" + styles.clear_btn\n    }, \"Clear\")), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.duration_section\n    }, /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.audio_section\n    }, audioURL !== null && showUIAudio ? /*#__PURE__*/React__default.createElement(\"audio\", {\n      controls: true\n    }, /*#__PURE__*/React__default.createElement(\"source\", {\n      src: audios[0],\n      type: \"audio/ogg\"\n    }), /*#__PURE__*/React__default.createElement(\"source\", {\n      src: audios[0],\n      type: \"audio/mpeg\"\n    })) : null), /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.duration\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.mins\n    }, time.m !== undefined ? \"\" + (time.m <= 9 ? '0' + time.m : time.m) : '00'), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.divider\n    }, \":\"), /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.secs\n    }, time.s !== undefined ? \"\" + (time.s <= 9 ? '0' + time.s : time.s) : '00')), !recording ? /*#__PURE__*/React__default.createElement(\"p\", {\n      className: styles.help\n    }, \"Press the microphone to record\") : null), !recording ? /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: function onClick(e) {\n        return _this8.startRecording(e);\n      },\n      href: \" #\",\n      className: styles.mic_icon\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.microphone_icon_sec\n    }, /*#__PURE__*/React__default.createElement(\"svg\", {\n      className: styles.mic_icon_svg,\n      version: \"1.1\",\n      xmlns: \"http://www.w3.org/2000/svg\",\n      x: \"0px\",\n      y: \"0px\",\n      viewBox: \"0 0 1000 1000\",\n      enableBackground: \"new 0 0 1000 1000\"\n    }, /*#__PURE__*/React__default.createElement(\"g\", null, /*#__PURE__*/React__default.createElement(\"path\", {\n      d: \"M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z\"\n    }))))) : /*#__PURE__*/React__default.createElement(\"div\", {\n      className: styles.record_controller\n    }, /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: function onClick(e) {\n        return _this8.stopRecording(e);\n      },\n      href: \" #\",\n      className: styles.icons + \" \" + styles.stop\n    }, /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.stop_icon\n    })), /*#__PURE__*/React__default.createElement(\"a\", {\n      onClick: !pauseRecord ? function (e) {\n        return _this8.handleAudioPause(e);\n      } : function (e) {\n        return _this8.handleAudioStart(e);\n      },\n      href: \" #\",\n      className: styles.icons + \" \" + styles.pause\n    }, pauseRecord ? /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.play_icons\n    }) : /*#__PURE__*/React__default.createElement(\"span\", {\n      className: styles.pause_icons\n    })))) : /*#__PURE__*/React__default.createElement(\"p\", {\n      style: {\n        color: '#fff',\n        marginTop: 30,\n        fontSize: 25\n      }\n    }, \"Seems the site is Non-SSL\"))));\n  };\n  return Recorder;\n}(Component);\nRecorder.defaultProps = {\n  hideHeader: false,\n  mimeTypeToUseWhenRecording: null,\n  handleCountDown: function handleCountDown(data) {}\n};\nexport { Recorder };","map":{"version":3,"sources":["../src/components/Recorder.js"],"names":["audioType","Recorder","Component","props","state","time","miliseconds","recording","medianotFound","audios","audioBlob","stream","timer","startTimer","bind","countDown","handleAudioPause","e","preventDefault","clearInterval","mediaRecorder","pause","setState","pauseRecord","handleAudioStart","resume","setInterval","prevState","milisecondsToTime","handleCountDown","milisecs","secs","hours","Math","floor","divisor_for_minutes","minutes","divisor_for_seconds","seconds","ceil","obj","h","m","s","ms","initRecorder","navigator","getUserMedia","webkitGetUserMedia","mozGetUserMedia","msGetUserMedia","mediaDevices","audio","mimeTypeToUseWhenRecording","MediaRecorder","mimeType","chunks","ondataavailable","data","size","push","console","log","startRecording","start","stopRecording","getAudioTracks","tracks","forEach","track","stop","saveAudio","handleReset","blob","Blob","type","audioURL","window","URL","createObjectURL","handleAudioStop","url","duration","render","showUIAudio","title","disableFullUI","styles","recorder_library_box","recorder_box","recorder_box_inner","hideHeader","reco_header","h2","close_icons","record_section","btn_wrapper","handleAudioUpload","btn","upload_btn","uploadButtonDisabled","clear_btn","duration_section","audio_section","mins","undefined","divider","help","mic_icon","microphone_icon_sec","mic_icon_svg","record_controller","icons","stop_icon","play_icons","pause_icons","color","marginTop","fontSize","defaultProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport microphone from './../imgs/microphone.svg';\nimport stopIcon from './../imgs/stop.png';\nimport pauseIcons from './../imgs/pause.png';\nimport playIcons from './../imgs/play-button.png';\nimport closeIcons from './../imgs/close.png';\nimport styles from '../styles.module.css';\nconst audioType = 'audio/*';\n\nclass Recorder extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null,\n      stream: null\n    };\n    this.timer = 0;\n    this.startTimer = this.startTimer.bind(this);\n    this.countDown = this.countDown.bind(this);\n  }\n\n  handleAudioPause(e) {\n    e.preventDefault();\n    clearInterval(this.timer);\n    this.mediaRecorder.pause();\n    this.setState({ pauseRecord: true });\n  }\n\n  handleAudioStart(e) {\n    e.preventDefault();\n    this.startTimer();\n    this.mediaRecorder.resume();\n    this.setState({ pauseRecord: false });\n  }\n\n  startTimer() {\n    // if (this.timer === 0 && this.state.seconds > 0) {\n    this.timer = setInterval(this.countDown, 100);\n    // }\n  }\n\n  countDown() {\n    // Remove one second, set state so a re-render happens.\n\n    this.setState(prevState => {\n      const miliseconds = prevState.miliseconds + 100;\n      return ({ time: this.milisecondsToTime(miliseconds), miliseconds: miliseconds });\n    });\n    \n    if(this.props.handleCountDown){\n      this.props.handleCountDown(this.state.time);\n    }\n    \n  }\n\n  milisecondsToTime(milisecs) {\n\n    let secs = milisecs / 1000;\n    let hours = Math.floor(secs / (60 * 60));\n\n    let divisor_for_minutes = secs % (60 * 60);\n    let minutes = Math.floor(divisor_for_minutes / 60);\n\n    let divisor_for_seconds = divisor_for_minutes % 60;\n    let seconds = Math.ceil(divisor_for_seconds);\n\n\n    let obj = {\n      h: hours,\n      m: minutes,\n      s: seconds,\n      ms: milisecs\n    };\n    return obj;\n  }\n\n  async initRecorder() {\n    navigator.getUserMedia =\n    navigator.getUserMedia ||\n    navigator.webkitGetUserMedia ||\n    navigator.mozGetUserMedia ||\n    navigator.msGetUserMedia;\n    if (navigator.mediaDevices) {\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\n      if (this.props.mimeTypeToUseWhenRecording) {\n        this.mediaRecorder = new MediaRecorder(stream, { mimeType: this.props.mimeTypeToUseWhenRecording });\n      } else {\n        this.mediaRecorder = new MediaRecorder(stream);\n      }\n      this.chunks = [];\n      this.mediaRecorder.ondataavailable = e => {\n        if (e.data && e.data.size > 0) {\n          this.chunks.push(e.data);\n        }\n      };\n\n      this.stream = stream;\n    } else {\n      this.setState({ medianotFound: true });\n      console.log('Media Decives will work only with SSL.....');\n    }\n  }\n\n  async startRecording(e) {\n    e.preventDefault();\n    // wipe old data chunks\n    this.chunks = [];\n\n    await this.initRecorder();\n    // start recorder with 10ms buffer\n    this.mediaRecorder.start(10);\n    this.startTimer();\n    // say that we're recording\n    this.setState({ recording: true });\n  }\n\n  stopRecording(e) {\n    clearInterval(this.timer);\n    this.setState({ time: {} });\n    e.preventDefault();\n    // stop the recorder\n\n    if (this.stream.getAudioTracks) {\n      const tracks = this.stream.getAudioTracks();\n      tracks.forEach((track) => {\n        track.stop();\n      });\n    } else {\n      console.log('No Tracks Found')\n    }\n\n    this.mediaRecorder.stop();\n\n    // say that we're not recording\n    this.setState({ recording: false, pauseRecord: false, });\n    // save the video to memory\n    this.saveAudio();\n  }\n\n  handleReset(e) {\n    if (this.state.recording) {\n      this.stopRecording(e);\n    }\n    this.setState({\n      time: {},\n      miliseconds: 0,\n      recording: false,\n      medianotFound: false,\n      audios: [],\n      audioBlob: null\n    }, () => {\n\n      this.props.handleReset(this.state);\n    });\n\n  }\n\n  saveAudio() {\n    // convert saved chunks to blob\n    const blob = new Blob(this.chunks, { type: audioType });\n    // generate video url from blob\n    const audioURL = window.URL.createObjectURL(blob);\n    // append videoURL to list of saved videos for rendering\n    const audios = [audioURL];\n    this.setState({ audios, audioBlob: blob });\n    this.props.handleAudioStop({\n      url: audioURL,\n      blob: blob,\n      chunks: this.chunks,\n      duration: this.state.time\n    });\n  }\n\n  render() {\n    const { recording, audios, time, medianotFound, pauseRecord } = this.state;\n    const { showUIAudio, title, audioURL, disableFullUI } = this.props;\n\n    if (disableFullUI) { return null; }\n\n    return (\n      <div className={styles.recorder_library_box}>\n        <div className={styles.recorder_box}>\n          <div className={styles.recorder_box_inner}>\n            {\n              !this.props.hideHeader ?\n                <div className={styles.reco_header}>\n                  <h2 className={styles.h2}>{title}</h2>\n                  <span className={styles.close_icons}>\n                  </span>\n                </div> :\n                null\n            }\n            {\n              !medianotFound ?\n                (\n                  <div className={styles.record_section}>\n                    <div className={styles.btn_wrapper}>\n                      <button\n                        onClick={\n                          () =>\n                            this.props.handleAudioUpload(this.state.audioBlob)\n                        }\n                        className={`${styles.btn} ${styles.upload_btn}`}\n                        disabled={this.props.uploadButtonDisabled}\n                      >\n                    Upload\n                      </button>\n                      <button\n                        onClick={(e) => this.handleReset(e)}\n                        className={`${styles.btn} ${styles.clear_btn}`}\n                      >\n                    Clear\n                      </button>\n                    </div>\n                    <div className={styles.duration_section}>\n                      <div className={styles.audio_section}>\n                        {\n                          audioURL !== null && showUIAudio ?\n                            (\n                              <audio controls>\n                                <source src={audios[0]} type='audio/ogg' />\n                                <source src={audios[0]} type='audio/mpeg' />\n                              </audio>\n                            ) :\n                            null\n                        }\n                      </div>\n                      <div className={styles.duration}>\n                        <span className={styles.mins}>\n                          {\n                            time.m !== undefined ?\n                              `${time.m <= 9 ? '0' + time.m : time.m}` :\n                              '00'\n                          }\n                        </span>\n                        <span className={styles.divider}>:</span>\n                        <span className={styles.secs}>\n                          {\n                            time.s !== undefined ?\n                              `${time.s <= 9 ? '0' + time.s : time.s}` :\n                              '00'\n                          }\n                        </span>\n                      </div>\n                      {\n                        !recording ?\n                          (\n                            <p className={styles.help}>Press the microphone to record</p>\n                          ) :\n                          null\n                      }\n                    </div>\n                    {\n                      !recording ?\n                        (\n                          <a\n                            onClick={e => this.startRecording(e)}\n                            href=' #'\n                            className={styles.mic_icon}\n                          >\n                            {/* <img src={microphone} width={30} height={30} alt=\"Microphone icons\" /> */}\n                            <span className={styles.microphone_icon_sec}>\n                              <svg className={styles.mic_icon_svg} version='1.1' xmlns='http://www.w3.org/2000/svg' x='0px' y='0px' viewBox='0 0 1000 1000' enableBackground='new 0 0 1000 1000' >\n                                <g>\n                                  <path d='M500,683.8c84.6,0,153.1-68.6,153.1-153.1V163.1C653.1,78.6,584.6,10,500,10c-84.6,0-153.1,68.6-153.1,153.1v367.5C346.9,615.2,415.4,683.8,500,683.8z M714.4,438.8v91.9C714.4,649,618.4,745,500,745c-118.4,0-214.4-96-214.4-214.4v-91.9h-61.3v91.9c0,141.9,107.2,258.7,245,273.9v124.2H346.9V990h306.3v-61.3H530.6V804.5c137.8-15.2,245-132.1,245-273.9v-91.9H714.4z' />\n                                </g>\n                              </svg>\n\n                            </span>\n                          </a>\n                        ) :\n                        (\n                          <div className={styles.record_controller}>\n                            <a\n                              onClick={e => this.stopRecording(e)}\n                              href=' #'\n                              className={`${styles.icons} ${styles.stop}`}\n                            >\n                              <span className={styles.stop_icon}></span>\n                              {/* <img src={stopIcon} width={20} height={20} alt=\"Stop icons\" /> */}\n\n                              {/* <span className={`${styles.icons} ${styles.FaStop}`}></span> */}\n                            </a>\n                            <a\n                              onClick={\n                                !pauseRecord ?\n                                  e => this.handleAudioPause(e) :\n                                  e => this.handleAudioStart(e)\n                              }\n                              href=' #'\n                              className={`${styles.icons} ${styles.pause}`}\n                            >\n                              {\n                                pauseRecord ?\n                                  <span className={styles.play_icons}></span> :\n                                  <span className={styles.pause_icons}></span>\n                              }\n                            </a>\n                          </div>\n                        )\n                    }\n                  </div>\n                ) :\n                (\n                  <p style={{ color: '#fff', marginTop: 30, fontSize: 25 }}>\n                  Seems the site is Non-SSL\n                  </p>\n                )\n            }\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Recorder;\n\nRecorder.defaultProps = {\n  hideHeader: false,\n  mimeTypeToUseWhenRecording: null,\n  handleCountDown: (data) => {},\n}\n"]},"metadata":{},"sourceType":"module"}