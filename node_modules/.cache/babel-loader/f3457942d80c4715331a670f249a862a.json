{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @description A module for parsing ISO8601 durations\n */\n\n/**\n * The pattern used for parsing ISO8601 duration (PnYnMnDTnHnMnS).\n * This does not cover the week format PnW.\n */\n\n// PnYnMnDTnHnMnS\nvar numbers = '\\\\d+(?:[\\\\.,]\\\\d+)?';\nvar weekPattern = '(' + numbers + 'W)';\nvar datePattern = '(' + numbers + 'Y)?(' + numbers + 'M)?(' + numbers + 'D)?';\nvar timePattern = 'T(' + numbers + 'H)?(' + numbers + 'M)?(' + numbers + 'S)?';\nvar iso8601 = 'P(?:' + weekPattern + '|' + datePattern + '(?:' + timePattern + ')?)';\nvar objMap = ['weeks', 'years', 'months', 'days', 'hours', 'minutes', 'seconds'];\n\n/**\n * The ISO8601 regex for matching / testing durations\n */\nvar pattern = exports.pattern = new RegExp(iso8601);\n\n/** Parse PnYnMnDTnHnMnS format to object\n * @param {string} durationString - PnYnMnDTnHnMnS formatted string\n * @return {Object} - With a property for each part of the pattern\n */\nvar parse = exports.parse = function parse(durationString) {\n  // Slice away first entry in match-array\n  return durationString.match(pattern).slice(1).reduce(function (prev, next, idx) {\n    prev[objMap[idx]] = parseFloat(next) || 0;\n    return prev;\n  }, {});\n};\n\n/**\n * Convert ISO8601 duration object to an end Date.\n *\n * @param {Object} duration - The duration object\n * @param {Date} startDate - The starting Date for calculating the duration\n * @return {Date} - The resulting end Date\n */\nvar end = exports.end = function end(duration, startDate) {\n  // Create two equal timestamps, add duration to 'then' and return time difference\n  var timestamp = startDate ? startDate.getTime() : Date.now();\n  var then = new Date(timestamp);\n  then.setFullYear(then.getFullYear() + duration.years);\n  then.setMonth(then.getMonth() + duration.months);\n  then.setDate(then.getDate() + duration.days);\n  then.setHours(then.getHours() + duration.hours);\n  then.setMinutes(then.getMinutes() + duration.minutes);\n  // Then.setSeconds(then.getSeconds() + duration.seconds);\n  then.setMilliseconds(then.getMilliseconds() + duration.seconds * 1000);\n  // Special case weeks\n  then.setDate(then.getDate() + duration.weeks * 7);\n  return then;\n};\n\n/**\n * Convert ISO8601 duration object to seconds\n *\n * @param {Object} duration - The duration object\n * @param {Date} startDate - The starting point for calculating the duration\n * @return {Number}\n */\nvar toSeconds = exports.toSeconds = function toSeconds(duration, startDate) {\n  var timestamp = startDate ? startDate.getTime() : Date.now();\n  var now = new Date(timestamp);\n  var then = end(duration, now);\n  var seconds = (then.getTime() - now.getTime()) / 1000;\n  return seconds;\n};\nexports.default = {\n  end: end,\n  toSeconds: toSeconds,\n  pattern: pattern,\n  parse: parse\n};","map":{"version":3,"names":["Object","defineProperty","exports","value","numbers","weekPattern","datePattern","timePattern","iso8601","objMap","pattern","RegExp","parse","durationString","match","slice","reduce","prev","next","idx","parseFloat","end","duration","startDate","timestamp","getTime","Date","now","then","setFullYear","getFullYear","years","setMonth","getMonth","months","setDate","getDate","days","setHours","getHours","hours","setMinutes","getMinutes","minutes","setMilliseconds","getMilliseconds","seconds","weeks","toSeconds","default"],"sources":["C:/xampp/htdocs/MedalohaLivePush/Medaloha_Dev_Local/node_modules/iso8601-duration/lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * @description A module for parsing ISO8601 durations\n */\n\n/**\n * The pattern used for parsing ISO8601 duration (PnYnMnDTnHnMnS).\n * This does not cover the week format PnW.\n */\n\n// PnYnMnDTnHnMnS\nvar numbers = '\\\\d+(?:[\\\\.,]\\\\d+)?';\nvar weekPattern = '(' + numbers + 'W)';\nvar datePattern = '(' + numbers + 'Y)?(' + numbers + 'M)?(' + numbers + 'D)?';\nvar timePattern = 'T(' + numbers + 'H)?(' + numbers + 'M)?(' + numbers + 'S)?';\n\nvar iso8601 = 'P(?:' + weekPattern + '|' + datePattern + '(?:' + timePattern + ')?)';\nvar objMap = ['weeks', 'years', 'months', 'days', 'hours', 'minutes', 'seconds'];\n\n/**\n * The ISO8601 regex for matching / testing durations\n */\nvar pattern = exports.pattern = new RegExp(iso8601);\n\n/** Parse PnYnMnDTnHnMnS format to object\n * @param {string} durationString - PnYnMnDTnHnMnS formatted string\n * @return {Object} - With a property for each part of the pattern\n */\nvar parse = exports.parse = function parse(durationString) {\n  // Slice away first entry in match-array\n  return durationString.match(pattern).slice(1).reduce(function (prev, next, idx) {\n    prev[objMap[idx]] = parseFloat(next) || 0;\n    return prev;\n  }, {});\n};\n\n/**\n * Convert ISO8601 duration object to an end Date.\n *\n * @param {Object} duration - The duration object\n * @param {Date} startDate - The starting Date for calculating the duration\n * @return {Date} - The resulting end Date\n */\nvar end = exports.end = function end(duration, startDate) {\n  // Create two equal timestamps, add duration to 'then' and return time difference\n  var timestamp = startDate ? startDate.getTime() : Date.now();\n  var then = new Date(timestamp);\n\n  then.setFullYear(then.getFullYear() + duration.years);\n  then.setMonth(then.getMonth() + duration.months);\n  then.setDate(then.getDate() + duration.days);\n  then.setHours(then.getHours() + duration.hours);\n  then.setMinutes(then.getMinutes() + duration.minutes);\n  // Then.setSeconds(then.getSeconds() + duration.seconds);\n  then.setMilliseconds(then.getMilliseconds() + duration.seconds * 1000);\n  // Special case weeks\n  then.setDate(then.getDate() + duration.weeks * 7);\n\n  return then;\n};\n\n/**\n * Convert ISO8601 duration object to seconds\n *\n * @param {Object} duration - The duration object\n * @param {Date} startDate - The starting point for calculating the duration\n * @return {Number}\n */\nvar toSeconds = exports.toSeconds = function toSeconds(duration, startDate) {\n  var timestamp = startDate ? startDate.getTime() : Date.now();\n  var now = new Date(timestamp);\n  var then = end(duration, now);\n\n  var seconds = (then.getTime() - now.getTime()) / 1000;\n  return seconds;\n};\n\nexports.default = {\n  end: end,\n  toSeconds: toSeconds,\n  pattern: pattern,\n  parse: parse\n};"],"mappings":"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"},"metadata":{},"sourceType":"script"}